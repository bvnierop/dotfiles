[user]
	name = Bart van Nierop
	useConfigOnly = true

[alias]
    st = status
    ci = commit
    co = checkout
    di = diff
    dc = diff --cached
    amend = commit --amend
    undo = reset --soft HEAD~1
    aa = add --all
    ff = merge --ff-only
    pullff = pull --ff-only
    noff = merge --no-ff
    fa = fetch --all
    pom = push origin master
    b = branch
    ds = diff --stat=160,120
    dh1 = diff HEAD~1

    untrack = rm --cached
 
    # Divergence (commits we added and commits remote added)
    div = divergence
 
    # Goodness (summary of diff lines added/removed/total)
    gn = goodness
    gnc = goodness --cached
 
    # Logging
    pl = log --pretty=format:\"%C(yellow)%h%Creset %C(green)%ar%Creset %C(bold blue)<%an>%Creset %C(bold red)%d%Creset %s\"
    plg = log --pretty=format:\"%C(yellow)%h%Creset %C(green)%ar%Creset %C(bold blue)<%an>%Creset %C(bold red)%d%Creset %s\" --graph
    spl = log --pretty=format:\"%C(yellow)%h%Creset %C(green)%ar%Creset %C(bold blue)<%an>%Creset %C(bold red)%d%Creset %s\" -n30
    splg = log --pretty=format:\"%C(yellow)%h%Creset %C(green)%ar%Creset %C(bold blue)<%an>%Creset %C(bold red)%d%Creset %s\" --graph -n30
    splb = log --pretty=format:\"%C(yellow)%h%Creset %C(green)%ar%Creset %C(bold blue)<%an>%Creset %C(bold red)%d%Creset %s\" --graph -n30 --branches

    fpull = !git fetch && git reset $(git branch --contains HEAD | tail -1 | awk '{print "origin/"$NF}') --hard

	# fuzzy checkout
    fco = !git branch --list --remotes | sed 's@origin/@@' | sort | uniq | grep -v 'HEAD ->' | fzf | xargs git checkout

    # fuzzy fixup
    fixup = !git spl -n50 --no-merges --color=always | fzf --ansi | cut -c -8 | xargs -o git commit --fixup

    # root
    root = rev-parse --show-toplevel

[includeIf "gitdir:/Users/"]
    path = ~/.gitconfig-macos
[includeIf "gitdir:C:"]
    path = ~/.gitconfig-windows
[includeIf "gitdir:/home/"]
    path = ~/.gitconfig-linux
